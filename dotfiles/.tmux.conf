unbind C-b
set -g prefix C-a
bind C-a send-prefix

# unbind C-Left
# unbind C-Right
# unbind S-Left
# unbind S-Right
# bind-key -n M-k select-pane -U
# bind-key -n M-l select-pane -L
# bind-key -n M-j select-pane -D
# bind-key -n M-h select-pane -R

bind \\ split-window -h
bind - split-window -v
bind -n C-Left previous-window
bind -n C-Right next-window
bind -n C-Up next-layout
bind = select-layout even-horizontal
bind _ select-layout even-vertical
bind o last-window
# bind M-3 select-layout main-horizontal
# bind M-4 select-layout main-vertical
# bind M-5 select-layout tiled
# bind SPACE resize-pane -Z
bind h select-pane -L
bind l select-pane -R
bind k select-pane -U
bind j select-pane -D
# bind u resize-pane -U 20
# bind U resize-pane -D 20
# bind > resize-pane -R 20
# bind < resize-pane -L 20
bind d detach
bind b choose-buffer

# Enable full mouse support.
set -g mouse on
unbind -T copy-mode MouseDragEnd1Pane
unbind -T copy-mode-vi MouseDragEnd1Pane
bind / copy-mode
bind -T copy-mode Escape send -X cancel
bind -T copy-mode v send -X begin-selection
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi v send -X begin-selection
if-shell 'uname | grep -q Linux' {bind-key -T copy-mode x send -X copy-pipe-and-cancel "xsel -i --clipboard"}
if-shell 'uname | grep -q Darwin' {bind-key -T copy-mode x send -X copy-pipe-and-cancel "pbcopy"}
if-shell 'uname | grep -q Linux' {bind-key -T copy-mode-vi x send -X copy-pipe-and-cancel "xsel -i --clipboard"}
if-shell 'uname | grep -q Darwin' {bind-key -T copy-mode-vi x send -X copy-pipe-and-cancel "pbcopy"}

bind -T copy-mode DoubleClick1Pane send -X select-word
bind -T copy-mode-vi DoubleClick1Pane send -X select-word
bind -T copy-mode TripleClick1Pane send -X select-line
bind -T copy-mode-vi TripleClick1Pane send -X select-line
bind -n DoubleClick1Pane if -F '#{?#{m:*vim*,#{pane_title}},0,1}' {copy-mode; send -X select-word} {send -M DoubleClick1}
bind -n TripleClick1Pane if -F '#{?#{m:*vim*,#{pane_title}},0,1}' {copy-mode; send -X select-line} {send -M TripleClick1}

if-shell 'uname | grep -q Linux' {bind -n MouseDown2Pane run "tmux set-buffer -b primary_selection \"$(xsel -o --clipboard)\"; tmux paste-buffer -b primary_selection; tmux delete-buffer -b primary_selection"}
if-shell 'uname | grep -q Darwin' {bind -n MouseDown2Pane run "tmux set-buffer -b primary_selection \"$(pbpaste)\"; tmux paste-buffer -b primary_selection; tmux delete-buffer -b primary_selection"}

set -g history-limit 100000
set -g display-time 4000
set -g visual-activity off
set-option -g allow-rename off
set-option -g default-terminal "xterm-256color"
set -g pane-border-style fg=default
set -g pane-active-border-style bg=default,fg=red
set -g window-status-current-style bg=black,fg=brightcyan
set -g status-style bg=black,fg=white
set -g message-style bg=black,fg=white

# Allow opening multiple terminals to view the same session at different sizes.
setw -g aggressive-resize on

# Send xterm compatible control arrow keys so they work with Vim.
# set -g utf on
setw -g xterm-keys on
set-window-option -g mode-keys vi
set-window-option -g visual-bell off
set-window-option -g monitor-activity off

# Do not let window titles get renamed automatically.
set-window-option -g automatic-rename off

# Ensure window index numbers get reordered on delete.
set-option -g renumber-windows off

# Start windows and panes index at 1, not 0.
set -g base-index 1
setw -g pane-base-index 1

# Remove delay when switching between Vim modes.
set -sg escape-time 0

# Allow Vim's FocusGained to work when your terminal gains focus.
# Requires Vim plugin: https://github.com/tmux-plugins/vim-tmux-focus-events
# set -g focus-events on

set -g @shell_mode 'vi'
set -g @yank_with_mouse off
set -g @yank_action 'copy-pipe-no-clear'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
if "test ! -d ~/.tmux/plugins/tpm" \
  "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"
run -b '~/.tmux/plugins/tpm/tpm'
